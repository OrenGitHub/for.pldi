

Terminals which are not used:

   INT
   MINUS
   PLUS


Conflict in state 63 between rule 30 and token EQ resolved as reduce.
Conflict in state 63 between rule 30 and token OR resolved as reduce.
Conflict in state 63 between rule 30 and token AND resolved as reduce.
Conflict in state 66 between rule 29 and token EQ resolved as reduce.
Conflict in state 66 between rule 29 and token OR resolved as reduce.
Conflict in state 66 between rule 29 and token AND resolved as reduce.
State 63 contains 1 shift/reduce conflict.
State 66 contains 1 shift/reduce conflict.

Grammar
rule 1    program -> func
rule 2    func -> CHARP ID LP CHARP ID RP LB stmts RB
rule 3    stmts -> stmt stmts
rule 4    stmts -> stmt
rule 5    stmt -> stmtEmpty
rule 6    stmt -> stmtWhile
rule 7    stmt -> stmtFor
rule 8    stmt -> stmtInc
rule 9    stmt -> stmtDec
rule 10   stmt -> stmtReturn
rule 11   stmt -> varDec
rule 12   varDec -> ID ID SEMI
rule 13   varDec -> ID PTR ID SEMI
rule 14   varDec -> CHARP ID SEMI
rule 15   stmtEmpty -> SEMI
rule 16   stmtWhile -> WHILE LP cond RP LB stmts RB
rule 17   stmtWhile -> WHILE LP cond RP stmt
rule 18   stmtFor -> FOR LP pre SEMI cond SEMI post RP LB stmts RB
rule 19   stmtFor -> FOR LP SEMI cond SEMI post RP LB stmts RB
rule 20   stmtFor -> FOR LP pre SEMI cond SEMI post RP stmt
rule 21   stmtFor -> FOR LP SEMI cond SEMI post RP stmt
rule 22   stmtReturn -> RETURN ID SEMI
rule 23   stmtInc -> ID PLUSPLUS SEMI
rule 24   stmtDec -> ID MINUSMINUS SEMI
rule 25   cond -> PTR ID
rule 26   cond -> LP cond RP
rule 27   cond -> cond EQ CHAR
rule 28   cond -> cond NE CHAR
rule 29   cond -> cond AND cond
rule 30   cond -> cond OR cond
rule 31   post -> ID PLUSPLUS
rule 32   pre -> ID ASSIGN ID

Terminals, with rules where they appear

$ (-1)
error (256)
ID (258) 2 12 13 14 22 23 24 25 31 32
EQ (259) 27
NE (260) 28
OR (261) 30
LP (262) 2 16 17 18 19 20 21 26
RP (263) 2 16 17 18 19 20 21 26
LB (264) 2 16 18 19
RB (265) 2 16 18 19
INT (266)
FOR (267) 18 19 20 21
PTR (268) 13 25
AND (269) 29
SEMI (270) 12 13 14 15 18 19 20 21 22 23 24
CHAR (271) 27 28
CHARP (272) 2 14
WHILE (273) 16 17
ASSIGN (274) 32
RETURN (275) 22
PLUSPLUS (276) 23 31
MINUSMINUS (277) 24
MINUS (278)
PLUS (279)

Nonterminals, with rules where they appear

program (25)
    on left: 1
func (26)
    on left: 2, on right: 1
stmts (27)
    on left: 3 4, on right: 2 3 16 18 19
stmt (28)
    on left: 5 6 7 8 9 10 11, on right: 3 4 17 20 21
varDec (29)
    on left: 12 13 14, on right: 11
stmtEmpty (30)
    on left: 15, on right: 5
stmtWhile (31)
    on left: 16 17, on right: 6
stmtFor (32)
    on left: 18 19 20 21, on right: 7
stmtReturn (33)
    on left: 22, on right: 10
stmtInc (34)
    on left: 23, on right: 8
stmtDec (35)
    on left: 24, on right: 9
cond (36)
    on left: 25 26 27 28 29 30, on right: 16 17 18 19 20 21 26 27 28
    29 30
post (37)
    on left: 31, on right: 18 19 20 21
pre (38)
    on left: 32, on right: 18 20


state 0

    CHARP	shift, and go to state 1

    program	go to state 84
    func	go to state 2



state 1

    func  ->  CHARP . ID LP CHARP ID RP LB stmts RB   (rule 2)

    ID  	shift, and go to state 3



state 2

    program  ->  func .   (rule 1)

    $default	reduce using rule 1 (program)



state 3

    func  ->  CHARP ID . LP CHARP ID RP LB stmts RB   (rule 2)

    LP  	shift, and go to state 4



state 4

    func  ->  CHARP ID LP . CHARP ID RP LB stmts RB   (rule 2)

    CHARP	shift, and go to state 5



state 5

    func  ->  CHARP ID LP CHARP . ID RP LB stmts RB   (rule 2)

    ID  	shift, and go to state 6



state 6

    func  ->  CHARP ID LP CHARP ID . RP LB stmts RB   (rule 2)

    RP  	shift, and go to state 7



state 7

    func  ->  CHARP ID LP CHARP ID RP . LB stmts RB   (rule 2)

    LB  	shift, and go to state 8



state 8

    func  ->  CHARP ID LP CHARP ID RP LB . stmts RB   (rule 2)

    ID  	shift, and go to state 9
    FOR 	shift, and go to state 10
    SEMI	shift, and go to state 11
    CHARP	shift, and go to state 12
    WHILE	shift, and go to state 13
    RETURN	shift, and go to state 14

    stmts	go to state 15
    stmt	go to state 16
    varDec	go to state 17
    stmtEmpty	go to state 18
    stmtWhile	go to state 19
    stmtFor	go to state 20
    stmtReturn	go to state 21
    stmtInc	go to state 22
    stmtDec	go to state 23



state 9

    varDec  ->  ID . ID SEMI   (rule 12)
    varDec  ->  ID . PTR ID SEMI   (rule 13)
    stmtInc  ->  ID . PLUSPLUS SEMI   (rule 23)
    stmtDec  ->  ID . MINUSMINUS SEMI   (rule 24)

    ID  	shift, and go to state 24
    PTR 	shift, and go to state 25
    PLUSPLUS	shift, and go to state 26
    MINUSMINUS	shift, and go to state 27



state 10

    stmtFor  ->  FOR . LP pre SEMI cond SEMI post RP LB stmts RB   (rule 18)
    stmtFor  ->  FOR . LP SEMI cond SEMI post RP LB stmts RB   (rule 19)
    stmtFor  ->  FOR . LP pre SEMI cond SEMI post RP stmt   (rule 20)
    stmtFor  ->  FOR . LP SEMI cond SEMI post RP stmt   (rule 21)

    LP  	shift, and go to state 28



state 11

    stmtEmpty  ->  SEMI .   (rule 15)

    $default	reduce using rule 15 (stmtEmpty)



state 12

    varDec  ->  CHARP . ID SEMI   (rule 14)

    ID  	shift, and go to state 29



state 13

    stmtWhile  ->  WHILE . LP cond RP LB stmts RB   (rule 16)
    stmtWhile  ->  WHILE . LP cond RP stmt   (rule 17)

    LP  	shift, and go to state 30



state 14

    stmtReturn  ->  RETURN . ID SEMI   (rule 22)

    ID  	shift, and go to state 31



state 15

    func  ->  CHARP ID LP CHARP ID RP LB stmts . RB   (rule 2)

    RB  	shift, and go to state 32



state 16

    stmts  ->  stmt . stmts   (rule 3)
    stmts  ->  stmt .   (rule 4)

    ID  	shift, and go to state 9
    FOR 	shift, and go to state 10
    SEMI	shift, and go to state 11
    CHARP	shift, and go to state 12
    WHILE	shift, and go to state 13
    RETURN	shift, and go to state 14

    $default	reduce using rule 4 (stmts)

    stmts	go to state 33
    stmt	go to state 16
    varDec	go to state 17
    stmtEmpty	go to state 18
    stmtWhile	go to state 19
    stmtFor	go to state 20
    stmtReturn	go to state 21
    stmtInc	go to state 22
    stmtDec	go to state 23



state 17

    stmt  ->  varDec .   (rule 11)

    $default	reduce using rule 11 (stmt)



state 18

    stmt  ->  stmtEmpty .   (rule 5)

    $default	reduce using rule 5 (stmt)



state 19

    stmt  ->  stmtWhile .   (rule 6)

    $default	reduce using rule 6 (stmt)



state 20

    stmt  ->  stmtFor .   (rule 7)

    $default	reduce using rule 7 (stmt)



state 21

    stmt  ->  stmtReturn .   (rule 10)

    $default	reduce using rule 10 (stmt)



state 22

    stmt  ->  stmtInc .   (rule 8)

    $default	reduce using rule 8 (stmt)



state 23

    stmt  ->  stmtDec .   (rule 9)

    $default	reduce using rule 9 (stmt)



state 24

    varDec  ->  ID ID . SEMI   (rule 12)

    SEMI	shift, and go to state 34



state 25

    varDec  ->  ID PTR . ID SEMI   (rule 13)

    ID  	shift, and go to state 35



state 26

    stmtInc  ->  ID PLUSPLUS . SEMI   (rule 23)

    SEMI	shift, and go to state 36



state 27

    stmtDec  ->  ID MINUSMINUS . SEMI   (rule 24)

    SEMI	shift, and go to state 37



state 28

    stmtFor  ->  FOR LP . pre SEMI cond SEMI post RP LB stmts RB   (rule 18)
    stmtFor  ->  FOR LP . SEMI cond SEMI post RP LB stmts RB   (rule 19)
    stmtFor  ->  FOR LP . pre SEMI cond SEMI post RP stmt   (rule 20)
    stmtFor  ->  FOR LP . SEMI cond SEMI post RP stmt   (rule 21)

    ID  	shift, and go to state 38
    SEMI	shift, and go to state 39

    pre 	go to state 40



state 29

    varDec  ->  CHARP ID . SEMI   (rule 14)

    SEMI	shift, and go to state 41



state 30

    stmtWhile  ->  WHILE LP . cond RP LB stmts RB   (rule 16)
    stmtWhile  ->  WHILE LP . cond RP stmt   (rule 17)

    LP  	shift, and go to state 42
    PTR 	shift, and go to state 43

    cond	go to state 44



state 31

    stmtReturn  ->  RETURN ID . SEMI   (rule 22)

    SEMI	shift, and go to state 45



state 32

    func  ->  CHARP ID LP CHARP ID RP LB stmts RB .   (rule 2)

    $default	reduce using rule 2 (func)



state 33

    stmts  ->  stmt stmts .   (rule 3)

    $default	reduce using rule 3 (stmts)



state 34

    varDec  ->  ID ID SEMI .   (rule 12)

    $default	reduce using rule 12 (varDec)



state 35

    varDec  ->  ID PTR ID . SEMI   (rule 13)

    SEMI	shift, and go to state 46



state 36

    stmtInc  ->  ID PLUSPLUS SEMI .   (rule 23)

    $default	reduce using rule 23 (stmtInc)



state 37

    stmtDec  ->  ID MINUSMINUS SEMI .   (rule 24)

    $default	reduce using rule 24 (stmtDec)



state 38

    pre  ->  ID . ASSIGN ID   (rule 32)

    ASSIGN	shift, and go to state 47



state 39

    stmtFor  ->  FOR LP SEMI . cond SEMI post RP LB stmts RB   (rule 19)
    stmtFor  ->  FOR LP SEMI . cond SEMI post RP stmt   (rule 21)

    LP  	shift, and go to state 42
    PTR 	shift, and go to state 43

    cond	go to state 48



state 40

    stmtFor  ->  FOR LP pre . SEMI cond SEMI post RP LB stmts RB   (rule 18)
    stmtFor  ->  FOR LP pre . SEMI cond SEMI post RP stmt   (rule 20)

    SEMI	shift, and go to state 49



state 41

    varDec  ->  CHARP ID SEMI .   (rule 14)

    $default	reduce using rule 14 (varDec)



state 42

    cond  ->  LP . cond RP   (rule 26)

    LP  	shift, and go to state 42
    PTR 	shift, and go to state 43

    cond	go to state 50



state 43

    cond  ->  PTR . ID   (rule 25)

    ID  	shift, and go to state 51



state 44

    stmtWhile  ->  WHILE LP cond . RP LB stmts RB   (rule 16)
    stmtWhile  ->  WHILE LP cond . RP stmt   (rule 17)
    cond  ->  cond . EQ CHAR   (rule 27)
    cond  ->  cond . NE CHAR   (rule 28)
    cond  ->  cond . AND cond   (rule 29)
    cond  ->  cond . OR cond   (rule 30)

    EQ  	shift, and go to state 52
    NE  	shift, and go to state 53
    OR  	shift, and go to state 54
    RP  	shift, and go to state 55
    AND 	shift, and go to state 56



state 45

    stmtReturn  ->  RETURN ID SEMI .   (rule 22)

    $default	reduce using rule 22 (stmtReturn)



state 46

    varDec  ->  ID PTR ID SEMI .   (rule 13)

    $default	reduce using rule 13 (varDec)



state 47

    pre  ->  ID ASSIGN . ID   (rule 32)

    ID  	shift, and go to state 57



state 48

    stmtFor  ->  FOR LP SEMI cond . SEMI post RP LB stmts RB   (rule 19)
    stmtFor  ->  FOR LP SEMI cond . SEMI post RP stmt   (rule 21)
    cond  ->  cond . EQ CHAR   (rule 27)
    cond  ->  cond . NE CHAR   (rule 28)
    cond  ->  cond . AND cond   (rule 29)
    cond  ->  cond . OR cond   (rule 30)

    EQ  	shift, and go to state 52
    NE  	shift, and go to state 53
    OR  	shift, and go to state 54
    AND 	shift, and go to state 56
    SEMI	shift, and go to state 58



state 49

    stmtFor  ->  FOR LP pre SEMI . cond SEMI post RP LB stmts RB   (rule 18)
    stmtFor  ->  FOR LP pre SEMI . cond SEMI post RP stmt   (rule 20)

    LP  	shift, and go to state 42
    PTR 	shift, and go to state 43

    cond	go to state 59



state 50

    cond  ->  LP cond . RP   (rule 26)
    cond  ->  cond . EQ CHAR   (rule 27)
    cond  ->  cond . NE CHAR   (rule 28)
    cond  ->  cond . AND cond   (rule 29)
    cond  ->  cond . OR cond   (rule 30)

    EQ  	shift, and go to state 52
    NE  	shift, and go to state 53
    OR  	shift, and go to state 54
    RP  	shift, and go to state 60
    AND 	shift, and go to state 56



state 51

    cond  ->  PTR ID .   (rule 25)

    $default	reduce using rule 25 (cond)



state 52

    cond  ->  cond EQ . CHAR   (rule 27)

    CHAR	shift, and go to state 61



state 53

    cond  ->  cond NE . CHAR   (rule 28)

    CHAR	shift, and go to state 62



state 54

    cond  ->  cond OR . cond   (rule 30)

    LP  	shift, and go to state 42
    PTR 	shift, and go to state 43

    cond	go to state 63



state 55

    stmtWhile  ->  WHILE LP cond RP . LB stmts RB   (rule 16)
    stmtWhile  ->  WHILE LP cond RP . stmt   (rule 17)

    ID  	shift, and go to state 9
    LB  	shift, and go to state 64
    FOR 	shift, and go to state 10
    SEMI	shift, and go to state 11
    CHARP	shift, and go to state 12
    WHILE	shift, and go to state 13
    RETURN	shift, and go to state 14

    stmt	go to state 65
    varDec	go to state 17
    stmtEmpty	go to state 18
    stmtWhile	go to state 19
    stmtFor	go to state 20
    stmtReturn	go to state 21
    stmtInc	go to state 22
    stmtDec	go to state 23



state 56

    cond  ->  cond AND . cond   (rule 29)

    LP  	shift, and go to state 42
    PTR 	shift, and go to state 43

    cond	go to state 66



state 57

    pre  ->  ID ASSIGN ID .   (rule 32)

    $default	reduce using rule 32 (pre)



state 58

    stmtFor  ->  FOR LP SEMI cond SEMI . post RP LB stmts RB   (rule 19)
    stmtFor  ->  FOR LP SEMI cond SEMI . post RP stmt   (rule 21)

    ID  	shift, and go to state 67

    post	go to state 68



state 59

    stmtFor  ->  FOR LP pre SEMI cond . SEMI post RP LB stmts RB   (rule 18)
    stmtFor  ->  FOR LP pre SEMI cond . SEMI post RP stmt   (rule 20)
    cond  ->  cond . EQ CHAR   (rule 27)
    cond  ->  cond . NE CHAR   (rule 28)
    cond  ->  cond . AND cond   (rule 29)
    cond  ->  cond . OR cond   (rule 30)

    EQ  	shift, and go to state 52
    NE  	shift, and go to state 53
    OR  	shift, and go to state 54
    AND 	shift, and go to state 56
    SEMI	shift, and go to state 69



state 60

    cond  ->  LP cond RP .   (rule 26)

    $default	reduce using rule 26 (cond)



state 61

    cond  ->  cond EQ CHAR .   (rule 27)

    $default	reduce using rule 27 (cond)



state 62

    cond  ->  cond NE CHAR .   (rule 28)

    $default	reduce using rule 28 (cond)



state 63

    cond  ->  cond . EQ CHAR   (rule 27)
    cond  ->  cond . NE CHAR   (rule 28)
    cond  ->  cond . AND cond   (rule 29)
    cond  ->  cond . OR cond   (rule 30)
    cond  ->  cond OR cond .   (rule 30)

    NE  	shift, and go to state 53

    NE  	[reduce using rule 30 (cond)]
    $default	reduce using rule 30 (cond)



state 64

    stmtWhile  ->  WHILE LP cond RP LB . stmts RB   (rule 16)

    ID  	shift, and go to state 9
    FOR 	shift, and go to state 10
    SEMI	shift, and go to state 11
    CHARP	shift, and go to state 12
    WHILE	shift, and go to state 13
    RETURN	shift, and go to state 14

    stmts	go to state 70
    stmt	go to state 16
    varDec	go to state 17
    stmtEmpty	go to state 18
    stmtWhile	go to state 19
    stmtFor	go to state 20
    stmtReturn	go to state 21
    stmtInc	go to state 22
    stmtDec	go to state 23



state 65

    stmtWhile  ->  WHILE LP cond RP stmt .   (rule 17)

    $default	reduce using rule 17 (stmtWhile)



state 66

    cond  ->  cond . EQ CHAR   (rule 27)
    cond  ->  cond . NE CHAR   (rule 28)
    cond  ->  cond . AND cond   (rule 29)
    cond  ->  cond AND cond .   (rule 29)
    cond  ->  cond . OR cond   (rule 30)

    NE  	shift, and go to state 53

    NE  	[reduce using rule 29 (cond)]
    $default	reduce using rule 29 (cond)



state 67

    post  ->  ID . PLUSPLUS   (rule 31)

    PLUSPLUS	shift, and go to state 71



state 68

    stmtFor  ->  FOR LP SEMI cond SEMI post . RP LB stmts RB   (rule 19)
    stmtFor  ->  FOR LP SEMI cond SEMI post . RP stmt   (rule 21)

    RP  	shift, and go to state 72



state 69

    stmtFor  ->  FOR LP pre SEMI cond SEMI . post RP LB stmts RB   (rule 18)
    stmtFor  ->  FOR LP pre SEMI cond SEMI . post RP stmt   (rule 20)

    ID  	shift, and go to state 67

    post	go to state 73



state 70

    stmtWhile  ->  WHILE LP cond RP LB stmts . RB   (rule 16)

    RB  	shift, and go to state 74



state 71

    post  ->  ID PLUSPLUS .   (rule 31)

    $default	reduce using rule 31 (post)



state 72

    stmtFor  ->  FOR LP SEMI cond SEMI post RP . LB stmts RB   (rule 19)
    stmtFor  ->  FOR LP SEMI cond SEMI post RP . stmt   (rule 21)

    ID  	shift, and go to state 9
    LB  	shift, and go to state 75
    FOR 	shift, and go to state 10
    SEMI	shift, and go to state 11
    CHARP	shift, and go to state 12
    WHILE	shift, and go to state 13
    RETURN	shift, and go to state 14

    stmt	go to state 76
    varDec	go to state 17
    stmtEmpty	go to state 18
    stmtWhile	go to state 19
    stmtFor	go to state 20
    stmtReturn	go to state 21
    stmtInc	go to state 22
    stmtDec	go to state 23



state 73

    stmtFor  ->  FOR LP pre SEMI cond SEMI post . RP LB stmts RB   (rule 18)
    stmtFor  ->  FOR LP pre SEMI cond SEMI post . RP stmt   (rule 20)

    RP  	shift, and go to state 77



state 74

    stmtWhile  ->  WHILE LP cond RP LB stmts RB .   (rule 16)

    $default	reduce using rule 16 (stmtWhile)



state 75

    stmtFor  ->  FOR LP SEMI cond SEMI post RP LB . stmts RB   (rule 19)

    ID  	shift, and go to state 9
    FOR 	shift, and go to state 10
    SEMI	shift, and go to state 11
    CHARP	shift, and go to state 12
    WHILE	shift, and go to state 13
    RETURN	shift, and go to state 14

    stmts	go to state 78
    stmt	go to state 16
    varDec	go to state 17
    stmtEmpty	go to state 18
    stmtWhile	go to state 19
    stmtFor	go to state 20
    stmtReturn	go to state 21
    stmtInc	go to state 22
    stmtDec	go to state 23



state 76

    stmtFor  ->  FOR LP SEMI cond SEMI post RP stmt .   (rule 21)

    $default	reduce using rule 21 (stmtFor)



state 77

    stmtFor  ->  FOR LP pre SEMI cond SEMI post RP . LB stmts RB   (rule 18)
    stmtFor  ->  FOR LP pre SEMI cond SEMI post RP . stmt   (rule 20)

    ID  	shift, and go to state 9
    LB  	shift, and go to state 79
    FOR 	shift, and go to state 10
    SEMI	shift, and go to state 11
    CHARP	shift, and go to state 12
    WHILE	shift, and go to state 13
    RETURN	shift, and go to state 14

    stmt	go to state 80
    varDec	go to state 17
    stmtEmpty	go to state 18
    stmtWhile	go to state 19
    stmtFor	go to state 20
    stmtReturn	go to state 21
    stmtInc	go to state 22
    stmtDec	go to state 23



state 78

    stmtFor  ->  FOR LP SEMI cond SEMI post RP LB stmts . RB   (rule 19)

    RB  	shift, and go to state 81



state 79

    stmtFor  ->  FOR LP pre SEMI cond SEMI post RP LB . stmts RB   (rule 18)

    ID  	shift, and go to state 9
    FOR 	shift, and go to state 10
    SEMI	shift, and go to state 11
    CHARP	shift, and go to state 12
    WHILE	shift, and go to state 13
    RETURN	shift, and go to state 14

    stmts	go to state 82
    stmt	go to state 16
    varDec	go to state 17
    stmtEmpty	go to state 18
    stmtWhile	go to state 19
    stmtFor	go to state 20
    stmtReturn	go to state 21
    stmtInc	go to state 22
    stmtDec	go to state 23



state 80

    stmtFor  ->  FOR LP pre SEMI cond SEMI post RP stmt .   (rule 20)

    $default	reduce using rule 20 (stmtFor)



state 81

    stmtFor  ->  FOR LP SEMI cond SEMI post RP LB stmts RB .   (rule 19)

    $default	reduce using rule 19 (stmtFor)



state 82

    stmtFor  ->  FOR LP pre SEMI cond SEMI post RP LB stmts . RB   (rule 18)

    RB  	shift, and go to state 83



state 83

    stmtFor  ->  FOR LP pre SEMI cond SEMI post RP LB stmts RB .   (rule 18)

    $default	reduce using rule 18 (stmtFor)



state 84

    $   	go to state 85



state 85

    $   	go to state 86



state 86

    $default	accept
